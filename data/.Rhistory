sessionInfo()
#!/bin/bash
echo "Hello, RStudio Shell Script!"
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
stop("hello from stop")
ls
pwd
Sys.setenv(LANGUAGE = "en")
Sys.setenv(LANGUAGE = "en")
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
stop("hello from stop")
Sys.setenv(LANGUAGE = "en")
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
stop("hello from stop")
cat("hello from cat\n 111")
ls
installed.packages()["rmarkdown", ]
"rmarkdown" %in% rownames(installed.packages())
install.packages("rmarkdown")
"rmarkdown" %in% rownames(installed.packages())
## code chunks
```{r, name-of-chunk}
```{r, read-data-from-web}
url_for_data <- "http://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
url_for_data <- "http://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
```{r,read-data-from-web}
```{r, read_data_from_web}
```{r read_data_from_web}
```{r, read_data_from_web}
```{r,read-data-from-web}
url_for_data <- "http://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
url_for_data <- "http://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
data <- read.csv(url_for_data, header = TRUE)
head(data)
tinytex::install_tinytex()
N
Y
tinytex::install_tinytex()
Sys.Date()
format(Sys.Date(), "%Y-%m-%d")
format(Sys.Date(), "%m-%d-%Y")
# Load necessary packages
library(ggplot2)
library(tidyverse)
install.packages(tidyverse)
install.packages
install.packages(tidyverse)
data_url <- "https://bit.ly/vrc01_data"
data <- read.csv(data_url, header = TRUE)
install.packages("here")
```{r, here-i-am}
mod <- glm(
ab_resistance ~ shield_glycans + region + env_length,
data = data
)
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
data_url <- "https://bit.ly/vrc01_data"
data <- read.csv(data_url, header = TRUE)
data <- read.csv(data_url, header = TRUE)
library(labelled)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans <- ifelse(data$shield_glycans < 4, "< 4", ">= 4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
#| fig.align = "center",
#| out.width = "100px"
library(ggplot2)
ggplot(data, aes(x = shield_glycans, y = ab_resistance)) +
geom_point() +
geom_smooth(method = lm) +
theme_bw()
mod <- glm(
ab_resistance ~ shield_glycans + region + env_length,
data = data
)
tbl_regression(mod) |>
add_global_p()
1
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
data_url <- "https://bit.ly/vrc01_data"
data <- read.csv(data_url, header = TRUE)
library(labelled)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans <- ifelse(data$shield_glycans < 4, "< 4", ">= 4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
#| fig.align = "center",
#| out.width = "100px"
library(ggplot2)
ggplot(data, aes(x = shield_glycans, y = ab_resistance)) +
geom_point() +
geom_smooth(method = lm) +
theme_bw()
library(knitr)
library(dplyr)
# Ensure data is available
if (!exists("data")) stop("Error: 'data' does not exist.")
if (!is.data.frame(data)) stop("Error: 'data' is not a data frame.")
data <- na.omit(data)  # Remove missing values to avoid model errors
# Fit the model
mod <- glm(
ab_resistance ~ shield_glycans + region + env_length,
data = data
)
# Extract the regression coefficients table
table_data <- summary(mod)$coefficients
# Convert to a data frame for formatting
table_data <- as.data.frame(table_data)
# Round all numeric values to 2 decimal places
table_data <- table_data %>%
mutate(across(everything(), ~ round(., 2)))
# Replace p-values less than 0.01 with "<0.01"
table_data$`Pr(>|t|)` <- ifelse(table_data$`Pr(>|t|)` < 0.01, "<0.01", table_data$`Pr(>|t|)`)
# Modify variable names for better readability
rownames(table_data) <- gsub("\\(Intercept\\)", "$\\beta_0$", rownames(table_data)) # LaTeX notation for intercept
rownames(table_data) <- gsub("shield_glycans", "Shield Glycans", rownames(table_data))
rownames(table_data) <- gsub("region", "Region", rownames(table_data))
rownames(table_data) <- gsub("env_length", "Envelope Length", rownames(table_data))
# Display the table using knitr::kable
kable(table_data, format = "html", caption = "Regression Results")
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial()
)
tbl_regression(binary_mod, exponentiate = TRUE) |>
add_global_p()
#question 1-use IML to check my results
# 1. 读取数据
X1 <- c(7, 4, 16, 3, 21, 8)
X2 <- c(33, 41, 7, 49, 5, 31)
Y <- c(42, 33, 75, 28, 91, 55)
# 2. 线性回归模型
model <- lm(Y ~ X1 + X2)
# 3. 查看回归系数
summary(model)
# 4. 检查残差
residuals(model)
# 5. 计算预测值
new_data <- data.frame(X1 = 10, X2 = 30)
predict(model, newdata = new_data, se.fit = TRUE)
#question 2 求 F值对应的p
# df
df1 <- 2
df2 <- 59
# assign F_value
F_value <- 36.44
# calculate p_value
p_value <- 1 - pf(F_value, df1, df2)
# output p_value
p_value
df1 <- 1
df2 <- 60
# assign F_value
F_value <- 36.44
# calculate p_value
p_value <- 1 - pf(F_value, df1, df2)
# output p_value
p_value
df1 <- 1
df2 <- 60
# assign F_value
F_value <- 22.16
# calculate p_value
p_value <- 1 - pf(F_value, df1, df2)
# output p_value
p_value
df1 <- 1
df2 <- 59
# assign F_value
F_value <- 37.31
# calculate p_value
p_value <- 1 - pf(F_value, df1, df2)
# output p_value
p_value
df1 <- 3
df2 <- 58
# assign F_value
F_value <- 72.46
# calculate p_value
p_value <- 1 - pf(F_value, df1, df2)
# output p_value
p_value
load("~/data550-test1-repo/README.md")
create_table <- function(data) {
library(gtsummary)
library(labelled)
data <- data |>
mutate(
race_ethnicity = as.factor(`Race and Ethnicity`),
vaccination_percentage = Percent,
estimated_population = Denominator * Percent / 100
)
var_label(data) <- list(
race_ethnicity = "Race and Ethnicity",
vaccination_percentage = "Percent",
estimated_population = "Estimated Eligible Population"
)
data |>
select(race_ethnicity, vaccination_percentage, estimated_population) |>
tbl_summary(by = race_ethnicity) |>
modify_spanning_header(all_stat_cols() ~ "**RSV Vaccination Coverage**") |>
add_overall() |>
add_p()
}
View(create_table)
View(create_table)
create_plot <- function(data) {
library(ggplot2)
data <- data |> mutate(race_ethnicity = as.factor(`Race and Ethnicity`))
ggplot(data, aes(x = as.Date(Week_Ending_Date), y = Percent, color = race_ethnicity)) +
geom_line(linewidth = 1) +
labs(title = "RSV Vaccination Coverage Over Time",
x = "Week Ending Date",
y = "Vaccination Percentage",
color = "Race/Ethnicity") +
theme_minimal()
}
getwd()
setwd("C:/Users/段丽辉/Desktop/study abroad/Emory/202501-202505/DATA 550 Data science Toolkit/Final Project/final-project/report")
file.exists("../data/rsv_vax.csv")
file.exists("../data/你的文件名.csv")
file.exists("../data/rsv_vax.csv")
file.exists("../data/Data-Weekly_Respiratory_Syncytial_Virus__RSV__Vaccination_Coverage_among_Pregnant_or_Recently_Pregnant_Women_18-49_Years__by_Race_and_Ethnicity_20250130.csv")
setwd("C:/Users/段丽辉/Desktop/study abroad/Emory/202501-202505/DATA 550 Data science Toolkit/Final Project/final-project")
file.exists("data/Data-Weekly_Respiratory_Syncytial_Virus__RSV__Vaccination_Coverage_among_Pregnant_or_Recently_Pregnant_Women_18-49_Years__by_Race_and_Ethnicity_20250130.csv")
list.files("data")
read_csv(paste0("data/", "Data-Weekly_Respiratory_Syncytial_Virus__RSV__Vaccination_Coverage_among_Pregnant_or_Recently_Pregnant_Women_18-49_Years__by_Race_and_Ethnicity_20250130.csv"))
read_csv("data/Data-Weekly_Respiratory_Syncytial_Virus__RSV__Vaccination_Coverage_among_Pregnant_or_Recently_Pregnant_Women_18-49_Years__by_Race_and_Ethnicity_20250130.csv")
library(readr)
read_csv("data/Data-Weekly_Respiratory_Syncytial_Virus__RSV__Vaccination_Coverage_among_Pregnant_or_Recently_Pregnant_Women_18-49_Years__by_Race_and_Ethnicity_20250130.csv")
getwd()
list.files("data")
rsv_data <- read_csv("C:/Users/段丽辉/Desktop/study abroad/Emory/202501-202505/DATA 550 Data science Toolkit/Final Project/final-project/data/Data-Weekly_Respiratory_Syncytial_Virus__RSV__Vaccination_Coverage_among_Pregnant_or_Recently_Pregnant_Women_18-49_Years__by_Race_and_Ethnicity_20250130.csv")
knitr::opts_chunk$set(echo = TRUE)
# Load libraries and functions
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))  # set directory as the location of current .Rmd
library(readr)
rsv_data <- read_csv("../data/Data-Weekly_Respiratory_Syncytial_Virus__RSV__Vaccination_Coverage_among_Pregnant_or_Recently_Pregnant_Women_18-49_Years__by_Race_and_Ethnicity_20250130.csv")
setwd("C:/Users/段丽辉/Desktop/study abroad/Emory/202501-202505/DATA 550 Data science Toolkit/Final Project/final-project/data")
ls
file.exists("rsv_vax.csv")
knitr::opts_chunk$set(echo = TRUE)
# Load libraries and functions
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))  # set directory as the location of current .Rmd
library(readr)
rsv_data <- read_csv("../data/rsv_vax.csv")
source("../code/analysis.R") # make sure the right path and file name
make
knitr::opts_chunk$set(echo = TRUE)
# Load libraries and functions
library(readr)
rsv_data <- read_csv("data/rsv_vax.csv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# Automatically detect whether the script is running inside RStudio
# and adjust file paths accordingly.
if (requireNamespace("rstudioapi", quietly = TRUE) && rstudioapi::isAvailable()) {
# When knitting inside RStudio (e.g., button click), use paths relative to the report/ folder
rsv_data <- readr::read_csv("../data/rsv_vax.csv")
source("../code/analysis.R")
} else {
# When running from project root (e.g., via `make`), use direct paths
rsv_data <- readr::read_csv("data/rsv_vax.csv")
source("code/analysis.R")
}
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# Automatically detect whether the script is running inside RStudio
# and adjust file paths accordingly.
if (requireNamespace("rstudioapi", quietly = TRUE) && rstudioapi::isAvailable()) {
# When knitting inside RStudio (e.g., button click), use paths relative to the report/ folder
rsv_data <- readr::read_csv("../data/rsv_vax.csv")
source("../code/analysis.R")
} else {
# When running from project root (e.g., via `make`), use direct paths
rsv_data <- readr::read_csv("data/rsv_vax.csv")
source("code/analysis.R")
}
